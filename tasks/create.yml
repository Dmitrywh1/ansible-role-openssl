---
- name: create ssl key
  openssl_privatekey:
    path: "{{ openssl_key_directory }}/{{ item.name }}.key"

- name: create ssl csr
  openssl_csr:
    path: "{{ openssl_csr_directory }}/{{ item.name }}.csr"
    privatekey_path: "{{ openssl_key_directory }}/{{ item.name }}.key"
    common_name: "{{ item.common_name }}"

- name: create ssl certificates
  openssl_certificate:
    path: "{{ openssl_crt_directory}}/{{ item.name }}.crt"
    privatekey_path: "{{ openssl_key_directory }}/{{ item.name }}.key"
    csr_path: "{{ openssl_csr_directory }}/{{ item.name }}.csr"
    provider: selfsigned

- name: create PKCS#12 file
  openssl_pkcs12:
    action: export
    path: "{{ openssl_key_directory }}/{{ item.name }}.p12"
    friendly_name: "{{ item.name }}"
    privatekey_path: "{{ openssl_key_directory }}/{{ item.name }}.key"
    certificate_path: "{{ openssl_crt_directory}}/{{ item.name }}.crt"
    state: present

- name: read private key
  slurp:
    src: "{{ openssl_key_directory }}/{{ item.name }}.key"
  register: openssl_private_key

- name: read certificate
  slurp:
    src: "{{ openssl_crt_directory}}/{{ item.name }}.crt"
  register: openssl_certifcate

- name: create combined private_key and certificate file
  copy:
    dest: "{{ openssl_key_directory }}/{{ item.name }}.keycrt"
    content: |-
      {{ openssl_private_key.content | b64decode | trim }}
      {{ openssl_certifcate.content | b64decode | trim }}
      world
